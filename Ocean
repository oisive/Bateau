package BateauBase;
import java.util.ArrayList;
import java.util.Random;

public class Ocean {
	private int nombreBateau;
	private Case tableau[][];
	private ArrayList<Bateau> totalBateaux; 
	private int tour;
	
	public Ocean(){
		setNombreBateau(0);
		tableau = new Case[0][0];
		setTour(1);
	}
	
	public int getNombreBateau(){
		return nombreBateau;
	}
	
	public void setNombreBateau(int num){
		nombreBateau = num;
	}
	
	public int getTour(){
		return tour;
	}
	
	public void setTour(int num){
		tour = num;
	}
	
	public Ocean(int nombre){
		setNombreBateau(nombre);
		totalBateaux = new ArrayList<Bateau>();
		tableau = new Case[nombre][nombre];
		for(int i = 0 ; i < nombre ; ++i){
			for(int j = 0 ; j < nombre ; ++j){
				tableau[i][j] = new Case();
			}
		}
		setTour(1);
	}

	public Case[][] getTableau(){
		return tableau;
	}
	
	public Case getCase(int i, int j){
		return tableau[i][j];
	}
	
	public void placerBateaux(){
		int ligne;
		int colonne;
		int max = getNombreBateau();
		Random rand1 = new Random();
		Random rand2 = new Random();
	
		for(int i = 0 ; i < max ; ++i){
			Bateau b = new Bateau(i);
			ligne = rand1.nextInt(max);
			colonne = rand2.nextInt(max);
			getCase(ligne, colonne).ajouterBateau(b);
			totalBateaux.add(b);
		}
	}
	
	public void recupererBateau(Bateau b){
		for(int i = 0 ; i < nombreBateau ; ++i){
			for(int j = 0 ; j < nombreBateau ; ++j){
				if(getCase(i,j).getListe().contains(b)){
					
				}
					
			}
		}
	}
	
	public void determinerCaseDeplacement(){
		int limite = getNombreBateau();
		Bateau b = new Bateau();
		//char dir; 
		Case c = new Case();		
		
		for(int i = 0 ; i < limite ; i++){
			for(int j = 0 ; j < limite ; j++){
				if(!getCase(i,j).estVide()){
					for(int k = 0 ; k < getCase(i,j).getNombreBateauxCase() ; k++){
						if(getCase(i,j).getBateau(k).getAJoue() == 0){
							b = getCase(i,j).getBateau(k);
							if(b.demanderAction() == 0){	
								getCase(i,j).sortirBateau(b);
								//dir = b.choixDeplacement(); 
								c = rendreCaseSuivante(i,j);
								b.setAJoue(1);
								c.ajouterBateau(b);
								k--;	
							}
						}
					}		
				}
			}
		}
	}
	
	public Case rendreCaseSuivante(int i, int j){
		Case c = new Case();
		int limite = getNombreBateau() - 1;
		
		if(j == limite){
			if(i == limite){
				c = getCase(0,0);
			}
			else{
				c = getCase(i + 1, 0);
			}
		}
		else{
			c = getCase(i, j + 1);	
		}
			
		return c;
	}
	
	public Case rendreCase(int i, int j, char dir){
		Case c = new Case();

		switch(dir){
		case 'N' :
			c = getCase(i - 1, j);
			break;
		case 'S' :
			c = getCase(i + 1, j);
			;
			break;
		case 'O' :
			c = getCase(i, j - 1);
			;
			break;
		case 'E' :
			c = getCase(i, j + 1);
			;
			break;
		}
			
		return c;
	}
	
	
	
	
	
	
	
	
	
	
	
	
}
